<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppButtonAddColor.Label" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AppButtonAddTextures.Label" xml:space="preserve">
    <value>Add Textures</value>
  </data>
  <data name="AppButtonDeleteColors.Label" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AppButtonDeleteTextures.Label" xml:space="preserve">
    <value>Delete Textures</value>
  </data>
  <data name="AppButtonExportAll.Label" xml:space="preserve">
    <value>Export All</value>
  </data>
  <data name="AppButtonExportXML.Label" xml:space="preserve">
    <value>Export XML</value>
  </data>
  <data name="AppButtonImport.Label" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="AppButtonNewProject.Label" xml:space="preserve">
    <value>New Project</value>
  </data>
  <data name="AppButtonOpenProject.Label" xml:space="preserve">
    <value>Open Project</value>
  </data>
  <data name="AppButtonSaveProject.Label" xml:space="preserve">
    <value>Save Project</value>
  </data>
  <data name="AppButtonSaveProjectAs.Label" xml:space="preserve">
    <value>Save Project As</value>
  </data>
  <data name="AppNavMenuBanner.Content" xml:space="preserve">
    <value>Banner Icons</value>
  </data>
  <data name="AppTitle.Text" xml:space="preserve">
    <value>Bannerlord Image Tool</value>
    <comment>The main window's title</comment>
  </data>
  <data name="ButtonAdd.Content" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ButtonBrowse.Content" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="ButtonCancel.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ButtonDelete.Content" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ButtonEdit.Content" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ButtonOK.Content" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ButtonOpenFolder.Content" xml:space="preserve">
    <value>Open folder</value>
  </data>
  <data name="ButtonSelectEllipses.Content" xml:space="preserve">
    <value>Select...</value>
  </data>
  <data name="ButtonYesDeleteSelection.Content" xml:space="preserve">
    <value>Yes, delete them</value>
  </data>
  <data name="ColorGridColumnBackground.Header" xml:space="preserve">
    <value>Background</value>
  </data>
  <data name="ColorGridColumnColor.Header" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ColorGridColumnID.Header" xml:space="preserve">
    <value>Color ID</value>
  </data>
  <data name="ColorGridColumnSigil.Header" xml:space="preserve">
    <value>Sigil</value>
  </data>
  <data name="DialogDeleteBannerGroup.Content" xml:space="preserve">
    <value>Are you sure to delete banner group "{0}"?</value>
  </data>
  <data name="DialogDeleteBannerGroup.Title" xml:space="preserve">
    <value>Delete Banner Group</value>
  </data>
  <data name="DialogDeleteBannerIcon.Content" xml:space="preserve">
    <value>Are you sure to delete {0} selected banner icons?</value>
  </data>
  <data name="DialogDeleteBannerIcon.Title" xml:space="preserve">
    <value>Delete Banner Icon</value>
  </data>
  <data name="DialogDeleteColor.Content" xml:space="preserve">
    <value>Are you sure to delete {0} selected banner colors?</value>
  </data>
  <data name="DialogDeleteColor.Title" xml:space="preserve">
    <value>Delete Banner Color</value>
  </data>
  <data name="DialogSelectColor.Title" xml:space="preserve">
    <value>Pick A Color</value>
  </data>
  <data name="ExportSuccess" xml:space="preserve">
    <value>Successfully exported to {0}.</value>
  </data>
  <data name="InfoBarExport" xml:space="preserve">
    <value>Exporting Assets</value>
  </data>
  <data name="LabelBannerGroupID.Text" xml:space="preserve">
    <value>Group ID</value>
  </data>
  <data name="LabelGameRootFolder.Text" xml:space="preserve">
    <value>Game Root Folder</value>
  </data>
  <data name="LabelTextureResolution.Text" xml:space="preserve">
    <value>Texture Resolution</value>
  </data>
  <data name="MenuItemAdd.Text" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="MenuItemDelete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="NeedGameRootFolder" xml:space="preserve">
    <value>(Please select the game install folder)</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="PivotBannerColorsEditor.Header" xml:space="preserve">
    <value>BANNER COLORS</value>
  </data>
  <data name="PivotBannerGroupsEditor.Header" xml:space="preserve">
    <value>BANNER GROUPS</value>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SaveXMLSuccess" xml:space="preserve">
    <value>Successfully saved to {0}.</value>
  </data>
  <data name="TextAdvancedSettingsTitle" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="TextBannerGroupListTitle.Text" xml:space="preserve">
    <value>BANNER ICON GROUPS</value>
  </data>
  <data name="TextBannerSettingsTitle.Text" xml:space="preserve">
    <value>Banner Settings</value>
  </data>
  <data name="TextBannerSpriteScanFolders.Text" xml:space="preserve">
    <value>Scan banner sprites in the following folders</value>
  </data>
  <data name="TextBannerSpriteScanFoldersExplain.Text" xml:space="preserve">
    <value>Manage the relative paths to folders where the sprites are likely to be found.
The relative paths are based on the texture import location.</value>
  </data>
  <data name="TextChange.Text" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="TextConfirmDeleteSelection.Text" xml:space="preserve">
    <value>All selected items will be removed. Do you want to continue?</value>
  </data>
  <data name="TextCustomBannerColorStartID.Text" xml:space="preserve">
    <value>Custom color start ID:</value>
  </data>
  <data name="TextCustomBannerColorStartIDExplain.Text" xml:space="preserve">
    <value>Ranged from 0 to 9999999.
Larger IDs are recommended to prevent collision.
Note that 0 to 193 are used by the vanilla game.</value>
  </data>
  <data name="TextCustomBannerGroupStartID.Text" xml:space="preserve">
    <value>Custom group start ID:</value>
  </data>
  <data name="TextCustomBannerGroupStartIDExplain.Text" xml:space="preserve">
    <value>Ranged from 1 to 99999.
Larger IDs are recommended to prevent collision.
Note that 1 to 6 are used by the vanilla game.</value>
  </data>
  <data name="TextExporting.Text" xml:space="preserve">
    <value>Exporting...</value>
  </data>
  <data name="TextNoSelectedBannerGroup.Text" xml:space="preserve">
    <value>Please select or create a new banner group.</value>
  </data>
  <data name="TextTexturePreview.Text" xml:space="preserve">
    <value>Texture Preview</value>
  </data>
  <data name="TextTextureProperties.Text" xml:space="preserve">
    <value>Texture Properties</value>
  </data>
  <data name="TextUISprite.Text" xml:space="preserve">
    <value>UI Sprite</value>
  </data>
  <data name="TextViewLogFiles.Text" xml:space="preserve">
    <value>View log files</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>