<Application
    x:Class="BLIT.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    DispatcherUnhandledException="OnDispatcherUnhandledException"
    Exit="OnExit"
    Startup="OnStartup"
    StartupUri="Windows/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--  MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive!  -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.FlatButton.xaml" />
                <!--  Theme setting  -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Amber.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ImageBrush
                x:Key="TransparentCheckerBrush"
                ImageSource="pack://application:,,,/Assets/transparent-checker.png"
                Stretch="None"
                TileMode="Tile"
                Viewport="0,0,16,16"
                ViewportUnits="Absolute" />

            <Style x:Key="ViewStyle" TargetType="UserControl">
                <Setter Property="Page.Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="Page.Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                <Setter Property="TextElement.FontSize" Value="{DynamicResource MahApps.Font.Size.Default}" />
            </Style>
            <Style BasedOn="{StaticResource MahApps.Styles.Button.MetroSquare}" TargetType="Button">
                <Setter Property="ToolTipService.InitialShowDelay" Value="50" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
                <Setter Property="BorderThickness" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="xctk:ButtonSpinner">
                <Setter Property="Height" Value="32" />
            </Style>
            <Style TargetType="xctk:IntegerUpDown">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            </Style>
            <Style TargetType="iconPacks:PackIconBootstrapIcons">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style BasedOn="{StaticResource MahApps.Styles.ToolBarTray}" TargetType="{x:Type ToolBarTray}">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SystemControlPageBackgroundListLow}" />
            </Style>
            <Style
                x:Key="SubtleSeparatorStyle"
                BasedOn="{StaticResource MahApps.Styles.Separator.StatusBar}"
                TargetType="Separator">
                <Setter Property="Margin" Value="8,0" />
                <Setter Property="Opacity" Value=".3" />
                <Setter Property="Height" Value="32" />
            </Style>
            <Style
                x:Key="{x:Static ToolBar.ButtonStyleKey}"
                BasedOn="{StaticResource MahApps.Styles.Button.ToolBar}"
                TargetType="Button">
                <Setter Property="ToolTipService.InitialShowDelay" Value="50" />
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="9" />
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="Margin" Value="0,4,0,0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=Orientation}" Value="Horizontal">
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="4,0,0,0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
