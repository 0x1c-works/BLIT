<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AndMore" xml:space="preserve">
    <value>及另{0}个</value>
  </data>
  <data name="AppButtonAddColor.Label" xml:space="preserve">
    <value>新颜色</value>
  </data>
  <data name="AppButtonAddTextures.Label" xml:space="preserve">
    <value>添加贴图</value>
  </data>
  <data name="AppButtonDeleteColors.Label" xml:space="preserve">
    <value>删除颜色</value>
  </data>
  <data name="AppButtonDeleteTextures.Label" xml:space="preserve">
    <value>删除贴图</value>
  </data>
  <data name="AppButtonExportAll.Label" xml:space="preserve">
    <value>全部导出</value>
  </data>
  <data name="AppButtonExportXML.Label" xml:space="preserve">
    <value>仅导出XML</value>
  </data>
  <data name="AppButtonImport.Label" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="AppButtonNewProject.Label" xml:space="preserve">
    <value>新建项目</value>
  </data>
  <data name="AppButtonOpenProject.Label" xml:space="preserve">
    <value>打开项目</value>
  </data>
  <data name="AppButtonSaveProject.Label" xml:space="preserve">
    <value>保存项目</value>
  </data>
  <data name="AppButtonSaveProjectAs.Label" xml:space="preserve">
    <value>项目另存为</value>
  </data>
  <data name="AppNavMenuBanner.Content" xml:space="preserve">
    <value>自定义旗帜</value>
  </data>
  <data name="AppNavMenuHelp.Content" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="AppTitle.Text" xml:space="preserve">
    <value>BLIT - 战团MOD图片助手</value>
    <comment>The main window's title</comment>
  </data>
  <data name="ButtonAdd.Content" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="ButtonBrowse.Content" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="ButtonCancel.Content" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ButtonChangeEllipses.Content" xml:space="preserve">
    <value>更改...</value>
  </data>
  <data name="ButtonDelete.Content" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="ButtonEdit.Content" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="ButtonOK.Content" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="ButtonOpenFolder.Content" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="ButtonReimport.Content" xml:space="preserve">
    <value>重新导入</value>
  </data>
  <data name="ButtonYesDeleteSelection.Content" xml:space="preserve">
    <value>是，删除它们</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ColorGridColumnBackground.Header" xml:space="preserve">
    <value>背景色</value>
  </data>
  <data name="ColorGridColumnColor.Header" xml:space="preserve">
    <value>颜色</value>
  </data>
  <data name="ColorGridColumnID.Header" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ColorGridColumnSigil.Header" xml:space="preserve">
    <value>纹章色</value>
  </data>
  <data name="DialogChangeLanguage.Content" xml:space="preserve">
    <value>变更语言需要重启应用。
如果取消，新的语言将会在下次启动应用时生效。</value>
  </data>
  <data name="DialogChangeLanguage.Title" xml:space="preserve">
    <value>语言变更</value>
  </data>
  <data name="DialogDeleteBannerGroup.Content" xml:space="preserve">
    <value>是否要删除图案分组“{0}”？</value>
  </data>
  <data name="DialogDeleteBannerGroup.Title" xml:space="preserve">
    <value>删除图案分组</value>
  </data>
  <data name="DialogDeleteBannerIcon.Content" xml:space="preserve">
    <value>是否要删除已选中的{0}个旗帜图案？</value>
  </data>
  <data name="DialogDeleteBannerIcon.Title" xml:space="preserve">
    <value>删除旗帜图案</value>
  </data>
  <data name="DialogDeleteColor.Content" xml:space="preserve">
    <value>是否要删除已选中的{0}个旗帜颜色？</value>
  </data>
  <data name="DialogDeleteColor.Title" xml:space="preserve">
    <value>删除旗帜颜色</value>
  </data>
  <data name="DialogSelectColor.Title" xml:space="preserve">
    <value>选取颜色</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="ErrorWhen" xml:space="preserve">
    <value>{0}失败</value>
  </data>
  <data name="ExportSuccess" xml:space="preserve">
    <value>已成功导出到：{0}</value>
  </data>
  <data name="InfoBarExport" xml:space="preserve">
    <value>资源导出</value>
  </data>
  <data name="LabelBannerGroupID.Text" xml:space="preserve">
    <value>分组ID</value>
  </data>
  <data name="LabelGameRootFolder.Text" xml:space="preserve">
    <value>游戏安装目录</value>
  </data>
  <data name="LabelTextureResolution.Text" xml:space="preserve">
    <value>贴图分辨率</value>
  </data>
  <data name="LinkColorWarning.Content" xml:space="preserve">
    <value>如何解决?</value>
  </data>
  <data name="LinkColorWarning.NavigateUri" xml:space="preserve">
    <value>https://blit.0x1.best/banner-icons-editor/#2-manage-custom-color:~:text=DO%20NOT%20add%20any%20custom%20color%20if%20you%3A</value>
  </data>
  <data name="LinkHelpWebsite" xml:space="preserve">
    <value>https://blit.0x1.best</value>
  </data>
  <data name="MenuItemAdd.Text" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="MenuItemDelete.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="NeedGameRootFolder" xml:space="preserve">
    <value>（请选择游戏安装目录）</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>打开</value>
  </data>
  <data name="OperationExporting" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="PivotBannerColorsEditor.Header" xml:space="preserve">
    <value>自定义颜色</value>
  </data>
  <data name="PivotBannerGroupsEditor.Header" xml:space="preserve">
    <value>自定义图案</value>
  </data>
  <data name="Placeholder.NewProject" xml:space="preserve">
    <value>(新项目)</value>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>请稍侯...</value>
  </data>
  <data name="SaveXMLSuccess" xml:space="preserve">
    <value>成功保存到：{0}</value>
  </data>
  <data name="TargetPathNotFound" xml:space="preserve">
    <value>找不到目标路径: {0}</value>
  </data>
  <data name="TextAboutTitle.Text" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="TextAdvanceSettingsTitle" xml:space="preserve">
    <value>高级</value>
  </data>
  <data name="TextAppearanceTitle.Text" xml:space="preserve">
    <value>外观</value>
  </data>
  <data name="TextBannerGroupListTitle.Text" xml:space="preserve">
    <value>旗帜图案分组</value>
  </data>
  <data name="TextBannerSettingsTitle.Text" xml:space="preserve">
    <value>旗帜设置</value>
  </data>
  <data name="TextBannerSpriteScanFolders.Text" xml:space="preserve">
    <value>在以下文件夹内检测旗帜图标（Sprite）：</value>
  </data>
  <data name="TextBannerSpriteScanFoldersExplain.Text" xml:space="preserve">
    <value>请在此处添加可能包含图标文件的文件夹相对路径。
相对路径应基于导入的贴图文件的位置。</value>
  </data>
  <data name="TextChange.Text" xml:space="preserve">
    <value>更改</value>
  </data>
  <data name="TextColorForBackground.Text" xml:space="preserve">
    <value>背景色</value>
  </data>
  <data name="TextColorForSigil.Text" xml:space="preserve">
    <value>纹章色</value>
  </data>
  <data name="TextColorWarning.Text" xml:space="preserve">
    <value>在原版游戏中使用自定义颜色，可能导致游戏崩溃或存档损坏。</value>
  </data>
  <data name="TextConfirmDeleteSelection.Text" xml:space="preserve">
    <value>所有选中的项目都将被移除，是否继续？</value>
  </data>
  <data name="TextCreator.Text" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="TextCustomBannerColorStartID.Text" xml:space="preserve">
    <value>自定义颜色起始ID：</value>
  </data>
  <data name="TextCustomBannerColorStartIDExplain.Text" xml:space="preserve">
    <value>取值范围从 194 到 999999。
推荐使用较大的ID，以避免和其他MOD冲突。
注意：0 到 193 为原版游戏所使用。</value>
  </data>
  <data name="TextCustomBannerGroupStartID.Text" xml:space="preserve">
    <value>自定义图案分组起始ID：</value>
  </data>
  <data name="TextCustomBannerGroupStartIDExplain.Text" xml:space="preserve">
    <value>取值范围为 7 到 99999。
推荐使用较大的ID，以避免和其他MOD冲突。
注意：1 到 6 为原版游戏所使用。</value>
  </data>
  <data name="TextExporting.Text" xml:space="preserve">
    <value>正在导出，请稍候...
资源较多时可能会花费较长时间</value>
  </data>
  <data name="TextIconDetails.Text" xml:space="preserve">
    <value>图案详情</value>
  </data>
  <data name="TextLanguage.Text" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="TextNoSelectedBannerGroup.Text" xml:space="preserve">
    <value>请选中或新建一个图案分组</value>
  </data>
  <data name="TextRequireRestart.Text" xml:space="preserve">
    <value>*需要重启应用</value>
  </data>
  <data name="TextTexturePreview.Text" xml:space="preserve">
    <value>贴图预览</value>
  </data>
  <data name="TextTheme.Text" xml:space="preserve">
    <value>主题</value>
  </data>
  <data name="TextUISprite.Text" xml:space="preserve">
    <value>UI 图标</value>
  </data>
  <data name="TextVersion.Text" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="TextViewLogFiles.Text" xml:space="preserve">
    <value>查看日志文件</value>
  </data>
  <data name="TextWarningHeader.Text" xml:space="preserve">
    <value>警告!</value>
  </data>
  <data name="ThemeDark" xml:space="preserve">
    <value>暗色</value>
  </data>
  <data name="ThemeLight" xml:space="preserve">
    <value>亮色</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
</root>